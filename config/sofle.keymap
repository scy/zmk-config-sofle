/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4     &kp N5                          &kp N6    &kp N7     &kp N8     &kp N9      &kp N0    &kp MINUS
&kp EQUAL  &kp Q   &kp W      &kp E     &kp R      &kp T                           &kp Y     &kp U      &kp I      &kp O       &kp P     &kp BSLH
&kp TAB    &kp A   &kp S      &kp D     &kp F      &kp G                           &kp H     &kp J      &kp K      &kp L       &kp SEMI  &kp BSPC
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V      &kp B     &kp C_MUTE  &none     &kp N     &kp M      &kp COMMA  &kp PERIOD  &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LGUI  &mo LOWER  &kp LALT  &kp ENTER   &kp SPACE &kp RALT  &mo RAISE  &kp RGUI   &kp RCTRL
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp F1     &kp F2     &kp F3    &kp F4      &kp F5                           &kp F6     &kp F7       &kp F8     &kp F9    &kp F10   &kp F11
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPS     &kp ASTRK  &kp LPAR  &kp RPAR  &kp F12
&trans  &kp GRAVE  &kp TILDE  &kp PLUS  &kp EQUAL   &kp SQT                          &kp DQT    &kp LBKT     &kp RBKT   &kp BSLH  &kp PIPE  &kp DEL
&trans  &none      &none      &none     &none       &none        &trans      &trans  &kp MINUS  &kp LT       &kp GT     &kp FSLH  &none     &trans
                   &trans     &trans    &trans      &trans       &kp K_LOCK  &none   &trans     &tog ADJUST  &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&kp PRINTSCREEN  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &kp INS     &kp C_PREV    &kp C_PP      &kp C_NEXT  &none  &kp C_BRI_UP
&kp SCROLLLOCK   &none         &none         &none         &none         &none                             &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none       &none  &kp C_BRI_DN
&kp PAUSE_BREAK  &none         &none         &none         &none         &none                             &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT   &none  &kp DEL
&trans           &none         &none         &none         &none         &none         &trans  &trans      &kp HOME    &kp PG_DN     &kp PG_UP     &kp END     &none  &trans
                               &trans        &trans        &tog ADJUST   &trans        &none   &kp K_LOCK  &trans      &trans        &trans        &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &kp KP_N1        &kp KP_N2        &kp KP_N3        &kp KP_N4        &kp KP_N5                        &kp KP_N6  &kp KP_N7    &kp KP_N8  &kp KP_N9   &kp KP_N0  &kp SYSREQ
&none       &none            &none            &none            &none            &none                            &none      &kp KP_N4    &kp KP_N5  &kp KP_N6   &none      &none
&trans      &rgb_ug RGB_TOG  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF                  &none      &kp KP_N1    &kp KP_N2  &kp KP_N3   &none      &none
&trans      &none            &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &trans  &trans  &none      &kp KP_N0    &kp COMMA  &kp PERIOD  &none      &trans
                             &trans           &trans           &tog ADJUST      &trans           &trans  &trans  &trans     &tog ADJUST  &trans     &trans
            >;
        };

    };
};
